schema {
  query: Query
}

enum AgeGenderGroupStatus {
  GRANTED
  ADDITIONAL
  HUMANITARIAN
  REJECTED
  DUBLIN
  GRANTED_ELSEWHERE
  OTHER
}

type AgeGenderGroupType {
  id: ID!
  men: Int
  women: Int
  boys: Int
  girls: Int
  status: AgeGenderGroupStatus!
  year: YearType!
  updatedAt: DateTime!
}

type AggregateType {
  men: Int
  women: Int
  boys: Int
  girls: Int
}

scalar Date

scalar DateTime

type GalleryType {
  id: ID!
  name: String!
  identifier: String!
  startDate: Date
  photoSet: [PhotoType!]!
}

type IngredientType {
  id: ID!
  recipe: RecipeType!
  name: String!
  amount: Int!
  unit: UnitType!
}

type PhotoType {
  id: ID!
  image: String!
  width: Int!
  height: Int!
  description: String!
  gallery: GalleryType!
  src: String
}

type Query {
  recipe(slug: String): RecipeType
  recipes: [RecipeType]
  categories(categoryName: String): [SectionCategoryType]
  sections(category: String): [SectionType]
  gallery(identifier: String): GalleryType
  allGalleries: [GalleryType]
  allPhotos: [PhotoType]
  years: [YearType]
  totalGranted: AggregateType
  totalNotGranted: AggregateType
  updatedAt: DateTime
}

type RecipeType {
  id: ID!
  name: String!
  slug: String!
  instructionText: String!
  ingredients: [IngredientType!]!
}

enum SectionCategory {
  FRONT_PAGE
  PROJECTS
}

type SectionCategoryType {
  name: String
  label: String
}

type SectionType {
  id: ID!
  mainText: String!
  category: SectionCategory!
  theOrder: Int!
}

type UnitType {
  id: ID!
  name: String!
  recipeingredientSet: [IngredientType!]!
}

type YearType {
  id: ID!
  startingDate: Date!
  visible: Boolean!
  agegendergroupSet: [AgeGenderGroupType!]!
  year: Int
  granted: AggregateType
  notGranted: AggregateType
}
